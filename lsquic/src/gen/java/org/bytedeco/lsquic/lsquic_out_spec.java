// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.lsquic;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.lsquic.global.lsquic.*;


@Properties(inherit = org.bytedeco.lsquic.presets.lsquic.class)
public class lsquic_out_spec extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public lsquic_out_spec() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public lsquic_out_spec(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public lsquic_out_spec(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public lsquic_out_spec position(long position) {
        return (lsquic_out_spec)super.position(position);
    }
    @Override public lsquic_out_spec getPointer(long i) {
        return new lsquic_out_spec((Pointer)this).position(position + i);
    }

    public native iovec iov(); public native lsquic_out_spec iov(iovec setter);
    public native @Cast("size_t") long iovlen(); public native lsquic_out_spec iovlen(long setter);
    public native @Const sockaddr local_sa(); public native lsquic_out_spec local_sa(sockaddr setter);
    public native @Const sockaddr dest_sa(); public native lsquic_out_spec dest_sa(sockaddr setter);
    public native Pointer peer_ctx(); public native lsquic_out_spec peer_ctx(Pointer setter);
    public native lsquic_conn_ctx_t conn_ctx(); public native lsquic_out_spec conn_ctx(lsquic_conn_ctx_t setter);  /* will be NULL when sending out the first batch of handshake packets */
    public native int ecn(); public native lsquic_out_spec ecn(int setter);       /* Valid values are 0 - 3.  See RFC 3168 */
}
