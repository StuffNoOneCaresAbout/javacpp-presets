// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.lsquic;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.lsquic.global.lsquic.*;


@Properties(inherit = org.bytedeco.lsquic.presets.lsquic.class)
public class lsquic_logger_if extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public lsquic_logger_if() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public lsquic_logger_if(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public lsquic_logger_if(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public lsquic_logger_if position(long position) {
        return (lsquic_logger_if)super.position(position);
    }
    @Override public lsquic_logger_if getPointer(long i) {
        return new lsquic_logger_if((Pointer)this).position(position + i);
    }

    public static class Log_buf_Pointer_BytePointer_long extends FunctionPointer {
        static { Loader.load(); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public    Log_buf_Pointer_BytePointer_long(Pointer p) { super(p); }
        protected Log_buf_Pointer_BytePointer_long() { allocate(); }
        private native void allocate();
        public native int call(Pointer logger_ctx, @Cast("const char*") BytePointer buf, @Cast("size_t") long len);
    }
    public native Log_buf_Pointer_BytePointer_long log_buf(); public native lsquic_logger_if log_buf(Log_buf_Pointer_BytePointer_long setter);
}
